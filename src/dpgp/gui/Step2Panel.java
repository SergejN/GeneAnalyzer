/*
    File:
        Step2Panel.java
 *
    Revision:
        1.0.0.0
 *
    Description:
        Displays the options of the second import step.
 *
    Project:
        GeneAnalyzer 2.2
 *
    Copyright:
        (c) 2008. Sergej Nowoshilow, Biozentrum, Martinsried, Germany.
 */

package dpgp.gui;

import dpgp.DatasetBuilder;
import java.io.File;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import kernel.Main;
import kernel.SettingsManager;

public class Step2Panel extends javax.swing.JPanel
{
    private class GFFFileFilter extends FileFilter
    {
        @Override
        public boolean accept(File f)
        {
            // Accept directories.
            if (f.isDirectory())
                return true;
            // Files.
            String fileName = f.getName();
            int i = fileName.lastIndexOf('.');
            if (i>0 && i<fileName.length()-1)
                return fileName.substring(i+1).equalsIgnoreCase("gff");
            return false;
        }

        @Override
        public String getDescription()
        {
            return "General Feature File (*.gff)";
        }
    };

    private class AFFFileFilter extends FileFilter
    {
        @Override
        public boolean accept(File f)
        {
            // Accept directories.
            if (f.isDirectory())
                return true;
            // Files.
            String fileName = f.getName();
            int i = fileName.lastIndexOf('.');
            if (i>0 && i<fileName.length()-1)
                return fileName.substring(i+1).equalsIgnoreCase("aff");
            return false;
        }

        @Override
        public String getDescription()
        {
            return "Alignment Fragment File (*.aff)";
        }
    };

    private Vector<AddFragmentDialog.Entry> entries = null;
    private SettingsManager sm      = null;


    public Step2Panel(SettingsManager sm)
    {
        initComponents();
        this.sm = sm;
        entries = new Vector<AddFragmentDialog.Entry>();
        setVisible(false);
    }

    /**
     *  Returns the type of the fragments:
     *      1 - fragments are specified by the GFF file
     *      2 - fragments are defined manually
     *      3 - fragments are defined in fragments file.
     *
     *  @return
     */
    public int getFragmentsType()
    {
        if(jrbGff.isSelected())
            return 1;
        else
        {
            if(jrbRegList.isSelected())
                return 2;
            else
                return 3;
        }
    }

    public String getGFFFilename()
    {
        return jeGffFile.getText();
    }

    public String getFragmentsFile()
    {
        return jeRegListFile.getText();
    }

    public HashMap<String, DatasetBuilder.Fragment> getFragments()
    {
        if(entries.size()==0)
            return null;
        HashMap<String, DatasetBuilder.Fragment> tmp = new HashMap<String, DatasetBuilder.Fragment>();
        for(AddFragmentDialog.Entry e:entries)
            tmp.put(e.strName, e.fragment);
        return tmp;
    }

    private void updateFragmentsList()
    {
        DefaultTableModel model = (DefaultTableModel)lvRegs.getModel();
        model.setRowCount(0);
        for(AddFragmentDialog.Entry e:entries)
            model.addRow(new Object[]{e.strName, e.fragment.strType, e.fragment.iStart, e.fragment.iEnd});
        jbRemove.setEnabled(entries.size()>0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jrbGff = new javax.swing.JRadioButton();
        jeGffFile = new javax.swing.JTextField();
        jbBrowseGff = new javax.swing.JButton();
        jrbUser = new javax.swing.JRadioButton();
        jrbRegList = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lvRegs = new javax.swing.JTable();
        jrbRegListFile = new javax.swing.JRadioButton();
        jeRegListFile = new javax.swing.JTextField();
        jbBrowsList = new javax.swing.JButton();
        jbAdd = new javax.swing.JButton();
        jbRemove = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setPreferredSize(new java.awt.Dimension(681, 416));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabel1.setText("STEP 2. Define genes or sequence fragments.");

        buttonGroup1.add(jrbGff);
        jrbGff.setSelected(true);
        jrbGff.setText("Use GFF file");
        jrbGff.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrbGffStateChanged(evt);
            }
        });

        jbBrowseGff.setText("...");
        jbBrowseGff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBrowseGffActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbUser);
        jrbUser.setText("Use user-defined fragments");
        jrbUser.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrbUserStateChanged(evt);
            }
        });

        buttonGroup2.add(jrbRegList);
        jrbRegList.setSelected(true);
        jrbRegList.setText("Fragments list");
        jrbRegList.setEnabled(false);
        jrbRegList.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrbRegListStateChanged(evt);
            }
        });

        lvRegs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Entry name", "Region type", "Region start", "Region end"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lvRegs);

        buttonGroup2.add(jrbRegListFile);
        jrbRegListFile.setText("Fragments list file");
        jrbRegListFile.setEnabled(false);
        jrbRegListFile.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jrbRegListFileStateChanged(evt);
            }
        });

        jeRegListFile.setEnabled(false);

        jbBrowsList.setText("...");
        jbBrowsList.setEnabled(false);
        jbBrowsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBrowsListActionPerformed(evt);
            }
        });

        jbAdd.setText("Add");
        jbAdd.setEnabled(false);
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });

        jbRemove.setText("Remove");
        jbRemove.setEnabled(false);
        jbRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                            .addComponent(jrbGff)
                            .addComponent(jrbUser)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jeGffFile, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBrowseGff))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jeRegListFile, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbBrowsList)
                                    .addComponent(jbAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jrbRegList)
                            .addComponent(jrbRegListFile))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jrbGff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jeGffFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBrowseGff))
                .addGap(18, 18, 18)
                .addComponent(jrbUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbRegList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbRegListFile))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemove)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBrowsList)
                    .addComponent(jeRegListFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jrbUserStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrbUserStateChanged
        jrbRegListFile.setEnabled(jrbUser.isSelected());
        jrbRegList.setEnabled(jrbUser.isSelected());
        if(!jrbUser.isSelected())
        {
            jrbRegList.setSelected(false);
            jrbRegListFile.setSelected(false);
        }
        else
            jrbRegList.setSelected(true);
}//GEN-LAST:event_jrbUserStateChanged

    private void jrbGffStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrbGffStateChanged
        jeGffFile.setEnabled(jrbGff.isSelected());
        jbBrowseGff.setEnabled(jrbGff.isSelected());
}//GEN-LAST:event_jrbGffStateChanged

    private void jrbRegListStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrbRegListStateChanged
        boolean active = jrbRegList.isSelected();
        lvRegs.setEnabled(active);
        jbAdd.setEnabled(active);
        jbRemove.setEnabled(active && entries.size()>0);
    }//GEN-LAST:event_jrbRegListStateChanged

    private void jrbRegListFileStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jrbRegListFileStateChanged
        boolean active = jrbRegListFile.isSelected();
        jeRegListFile.setEnabled(active);
        jbBrowsList.setEnabled(active);
    }//GEN-LAST:event_jrbRegListFileStateChanged

    private void jbBrowseGffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBrowseGffActionPerformed
        JFileChooser fc = new JFileChooser();
        String strLastDir = sm.getSetting("", "LastGFFDir");
        if(strLastDir!=null)
            fc.setCurrentDirectory(new File(strLastDir));
        fc.setMultiSelectionEnabled(false);
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(new GFFFileFilter());
        // Show OpenDialog.
        File f = null;
        if(fc.showOpenDialog(null)==JFileChooser.APPROVE_OPTION)
            f = fc.getSelectedFile();
        // If no files selected, return.
        if(f==null)
            return;
        // Load file.
        jeGffFile.setText(f.getAbsolutePath());
        // Save the directory.
        strLastDir = f.getParent();
        sm.addSetting("", "LastGFFDir", strLastDir);
    }//GEN-LAST:event_jbBrowseGffActionPerformed

    private void jbBrowsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBrowsListActionPerformed
        JFileChooser fc = new JFileChooser();
        String strLastDir = sm.getSetting("", "LastAFFDir");
        if(strLastDir!=null)
            fc.setCurrentDirectory(new File(strLastDir));
        fc.setMultiSelectionEnabled(false);
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(new AFFFileFilter());
        // Show OpenDialog.
        File f = null;
        if(fc.showOpenDialog(null)==JFileChooser.APPROVE_OPTION)
            f = fc.getSelectedFile();
        // If no files selected, return.
        if(f==null)
            return;
        // Load file.
        if(!f.exists())
        {
            JOptionPane.showMessageDialog(null, "The specified file does not exist", Main.APPTITLE, JOptionPane.ERROR_MESSAGE);
            return;
        }
        jeRegListFile.setText(f.getAbsolutePath());
        // Save the directory.
        strLastDir = f.getParent();
        sm.addSetting("", "LastAFFDir", strLastDir);
    }//GEN-LAST:event_jbBrowsListActionPerformed

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddActionPerformed
        AddFragmentDialog afd = new AddFragmentDialog();
        AddFragmentDialog.Entry e = afd.createGeneRegion();
        if(e!=null)
        {
            for(AddFragmentDialog.Entry en:entries)
            {
                if(en.strName.equalsIgnoreCase(e.strName))
                {
                    String s = String.format("Cannot add the fragment '%s' since a fragment with this name already exists", e.strName);
                    JOptionPane.showMessageDialog(null, s, Main.APPTITLE, JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            entries.add(e);
            updateFragmentsList();
        }
    }//GEN-LAST:event_jbAddActionPerformed

    private void jbRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoveActionPerformed
        int i = lvRegs.getSelectedRow();
        if(i>-1)
        {
            entries.remove(i);
            updateFragmentsList();
        }
    }//GEN-LAST:event_jbRemoveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbBrowsList;
    private javax.swing.JButton jbBrowseGff;
    private javax.swing.JButton jbRemove;
    private javax.swing.JTextField jeGffFile;
    private javax.swing.JTextField jeRegListFile;
    private javax.swing.JRadioButton jrbGff;
    private javax.swing.JRadioButton jrbRegList;
    private javax.swing.JRadioButton jrbRegListFile;
    private javax.swing.JRadioButton jrbUser;
    private javax.swing.JTable lvRegs;
    // End of variables declaration//GEN-END:variables

}
