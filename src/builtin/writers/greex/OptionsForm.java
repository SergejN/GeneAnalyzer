/*
    File:
        OptionsForm.java
 *   
    Revision:
        1.0.0.1
 * 
    Description:
        Allows the user to specify the export options. 
 * 
    Project:
        GeneAnalyzer 2.2
 * 
    Copyright:
        (c) 2008. Sergej Nowoshilow, Biozentrum, Martinsried, Germany.
 */

package builtin.writers.greex;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import kernel.Main;

public class OptionsForm extends javax.swing.JDialog 
{
    private ExportOptions eo = null;
    
    
    public OptionsForm() 
    {
        super((java.awt.Frame)null, true);
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public ExportOptions showOptionsDialog(String[] pops, String[] regs)
    {
        DefaultListModel model = new DefaultListModel();
        for(String s:pops)
            model.addElement(s);
        jlPops.setModel(model);
        for(String s:regs)
            jcbRegs.addItem(s);
        setVisible(true);
        return eo;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlPops = new javax.swing.JList();
        jcbRegs = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jcbMinLen = new javax.swing.JCheckBox();
        jeMinLen = new javax.swing.JTextField();
        jcbMaxLen = new javax.swing.JCheckBox();
        jeMaxLen = new javax.swing.JTextField();
        jcbLimit = new javax.swing.JCheckBox();
        jeLimit = new javax.swing.JTextField();
        jcbSites = new javax.swing.JCheckBox();
        jeSites = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export options");
        setModal(true);
        setResizable(false);

        jLabel1.setText("Populations to export:");

        jScrollPane1.setViewportView(jlPops);

        jLabel2.setText("Region type:");

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jcbMinLen.setText("Minimal length:");
        jcbMinLen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMinLenItemStateChanged(evt);
            }
        });

        jeMinLen.setEnabled(false);
        jeMinLen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeMinLenKeyTyped(evt);
            }
        });

        jcbMaxLen.setText("Maximal length:");
        jcbMaxLen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMaxLenItemStateChanged(evt);
            }
        });

        jeMaxLen.setEnabled(false);
        jeMaxLen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeMaxLenKeyTyped(evt);
            }
        });

        jcbLimit.setText("Limit the number of strain to:");
        jcbLimit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLimitItemStateChanged(evt);
            }
        });

        jeLimit.setEnabled(false);
        jeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeLimitKeyTyped(evt);
            }
        });

        jcbSites.setText("Export specific sites only:");
        jcbSites.setToolTipText("Sites with gaps are not counted");
        jcbSites.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbSitesItemStateChanged(evt);
            }
        });

        jeSites.setEnabled(false);
        jeSites.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeSitesKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbMinLen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jeMinLen, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jcbMaxLen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jeMaxLen, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                        .addGap(45, 45, 45))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcbLimit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcbSites)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jeSites, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMinLen)
                    .addComponent(jeMinLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMaxLen)
                    .addComponent(jeMaxLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbLimit)
                    .addComponent(jeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbSites)
                    .addComponent(jeSites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jcbRegs, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                            .addGap(10, 10, 10))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1)
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbRegs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    eo = null;
    setVisible(false);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    eo = new ExportOptions();
    // Populations.
    Object[] vals = jlPops.getSelectedValues();
    if(vals.length==0)
    {
        JOptionPane.showMessageDialog(null, 
                                      "Select at least one the population", 
                                      Main.APPTITLE, 
                                      JOptionPane.ERROR_MESSAGE);
        return;
    }
    else
    {
        eo.pops = new String[vals.length];
        for(int i=0;i<vals.length;i++)
            eo.pops[i] = (String)vals[i];
    }
    // Region type.
    eo.strReg = (String)jcbRegs.getSelectedItem();
    // Strains limit.
    if(jcbLimit.isSelected() && jeLimit.getText().isEmpty())
    {
        JOptionPane.showMessageDialog(null, 
                                      "Set the strain limit", 
                                      Main.APPTITLE, 
                                      JOptionPane.ERROR_MESSAGE);
        return;
    }
    eo.nStrains = (jcbLimit.isSelected()) ? Integer.parseInt(jeLimit.getText())
                                          : Integer.MAX_VALUE;
    // Sites.
    if(jcbSites.isSelected() && jeSites.getText().isEmpty())
    {
        JOptionPane.showMessageDialog(null, 
                                      "Specify the sites", 
                                      Main.APPTITLE, 
                                      JOptionPane.ERROR_MESSAGE);
        return;
    }
    eo.strSites = jeSites.getText();
    // Min./max. length
    if(jcbMinLen.isSelected())
        eo.iMinLen = (jeMinLen.getText().isEmpty()) ? 0 
                : Integer.parseInt(jeMinLen.getText());
    if(jcbMaxLen.isSelected())
        eo.iMaxLen = (jeMaxLen.getText().isEmpty()) ? Integer.MAX_VALUE 
                : Integer.parseInt(jeMaxLen.getText());
    setVisible(false);
}//GEN-LAST:event_jButton2ActionPerformed

private void jcbMinLenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMinLenItemStateChanged
    jeMinLen.setEnabled(jcbMinLen.isSelected());
}//GEN-LAST:event_jcbMinLenItemStateChanged

private void jcbMaxLenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMaxLenItemStateChanged
    jeMaxLen.setEnabled(jcbMaxLen.isSelected());
}//GEN-LAST:event_jcbMaxLenItemStateChanged

private void jcbLimitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLimitItemStateChanged
    jeLimit.setEnabled(jcbLimit.isSelected());
}//GEN-LAST:event_jcbLimitItemStateChanged

private void jcbSitesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbSitesItemStateChanged
    jeSites.setEnabled(jcbSites.isSelected());
}//GEN-LAST:event_jcbSitesItemStateChanged

private void jeMinLenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeMinLenKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeMinLenKeyTyped

private void jeMaxLenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeMaxLenKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeMaxLenKeyTyped

private void jeLimitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeLimitKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeLimitKeyTyped

private void jeSitesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeSitesKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c) && c!=' ' && c!=';' && c!='-' && c!=',')
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeSitesKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcbLimit;
    private javax.swing.JCheckBox jcbMaxLen;
    private javax.swing.JCheckBox jcbMinLen;
    private javax.swing.JComboBox jcbRegs;
    private javax.swing.JCheckBox jcbSites;
    private javax.swing.JTextField jeLimit;
    private javax.swing.JTextField jeMaxLen;
    private javax.swing.JTextField jeMinLen;
    private javax.swing.JTextField jeSites;
    private javax.swing.JList jlPops;
    // End of variables declaration//GEN-END:variables

}
