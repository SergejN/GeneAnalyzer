/*
    File:
        OptionsDialog.java
 *
    Revision:
        1.0.0.1
 *
    Description:
        Allows the user to select options for performing the analysis.
 *
    Project:
        GeneAnalyzer 2.2
 *
    Copyright:
        (c) 2008. Sergej Nowoshilow, Biozentrum, Martinsried, Germany.
 */


package builtin.analyses.composition;

import bio.gene.GeneRegion;
import java.util.Arrays;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


public class OptionsDialog extends javax.swing.JDialog
{
    private AnalysisOptions ao = null;
    
    public OptionsDialog(String[] pops, String[] regs)
    {
        super((java.awt.Frame)null, true);
        initComponents();
        setLocationRelativeTo(null);
        // Add populations.
        for(String s:pops)
            jcPop.addItem(s);
        // Iterate through the regions and enable the radio buttons.
        for(String s:regs)
        {
            // If there are at least one exon, enable FFD.
            if(s.equalsIgnoreCase(GeneRegion.EXON))
            {
                jrbFfd.setEnabled(true);
                jrbCds.setEnabled(true);
                continue;
            }
            // At least one intron.
            if(s.equalsIgnoreCase(GeneRegion.INTRON))
            {
                jrbIntron.setEnabled(true);
                jcbExclGtag.setEnabled(true);
                continue;
            }
            // Any other region type.
            if(!jrbOther.isEnabled())
                jrbOther.setEnabled(true);
            jcbReg.addItem(s);
        }
    }

    /**
     *  Displays the dialog and returns the options.
     *
     *  @param ao
     */
    public AnalysisOptions getOptions()
    {
        setVisible(true);
        return ao;
    }

    /**
     *  Extracts the positions to use from the parameter string.
     *
     *  @param strPositions
     *  @return
     */
    public static int[] extractSites(String strSites)
    {
        Vector<Integer> tmp = new Vector<Integer>();
        // Search for pairs.
        Pattern pair = Pattern.compile("(\\d+)-(\\d+)");
        Matcher m = pair.matcher(strSites);
        while(m.find())
        {
            // Make sure, the sites are always positive and the first site
            // is 0.
            int start = Math.max(Integer.parseInt(m.group(1))-1,0);
            int end = Math.max(Integer.parseInt(m.group(2))-1,0);
            // Add range.
            for(int i=Math.min(start, end);i<=Math.max(start,end);i++)
                tmp.add(new Integer(i));
        }
        // Search for single numbers.
        Pattern num = Pattern.compile("[,;\\s]+(\\d+)[,;\\s]*");
        m = num.matcher(strSites);
        while(m.find())
            tmp.add(Math.max(Integer.parseInt(m.group(1))-1,0));
        // Sort positions.
        if(tmp.size()==0)
            return null;
        int[] sites = new int[tmp.size()];
        for(int i=0;i<tmp.size();i++)
            sites[i] = tmp.get(i);
        Arrays.sort(sites);
        return sites;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcPop = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jcbMaxLen = new javax.swing.JCheckBox();
        jcbMinLen = new javax.swing.JCheckBox();
        jeMaxLen = new javax.swing.JTextField();
        jeMinLen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jrbFfd = new javax.swing.JRadioButton();
        jrbIntron = new javax.swing.JRadioButton();
        jrbOther = new javax.swing.JRadioButton();
        jcbReg = new javax.swing.JComboBox();
        jcbLimit = new javax.swing.JCheckBox();
        jeLimit = new javax.swing.JTextField();
        jcbRange = new javax.swing.JCheckBox();
        jeRange = new javax.swing.JTextField();
        jrbAny = new javax.swing.JRadioButton();
        jrbSyn = new javax.swing.JRadioButton();
        jcbNonFfd = new javax.swing.JCheckBox();
        jcbExclGtag = new javax.swing.JCheckBox();
        jrbCds = new javax.swing.JRadioButton();
        jcbUseTerm = new javax.swing.JCheckBox();
        jcbExclTerm = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jrbSizeConstant = new javax.swing.JRadioButton();
        jrbSizeVariable = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jeFilename = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jcbShow = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jrbLengthRange = new javax.swing.JRadioButton();
        jrbLengthUngapped = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bases composition analysis options");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("General"));

        jLabel2.setText("Population of interest:");
        jLabel2.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(jcPop, 0, 196, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Region"));
        jPanel3.setMaximumSize(new java.awt.Dimension(369, 364));
        jPanel3.setMinimumSize(new java.awt.Dimension(369, 364));

        jLabel5.setText("Region length boundaries (only for noncoding regions):");

        jcbMaxLen.setText("Maximal length:");
        jcbMaxLen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMaxLenItemStateChanged(evt);
            }
        });

        jcbMinLen.setText("Minimal length:");
        jcbMinLen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMinLenItemStateChanged(evt);
            }
        });

        jeMaxLen.setEnabled(false);
        jeMaxLen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeMaxLenKeyTyped(evt);
            }
        });

        jeMinLen.setEnabled(false);
        jeMinLen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeMinLenKeyTyped(evt);
            }
        });

        jLabel1.setText("Region type:");

        buttonGroup2.add(jrbFfd);
        jrbFfd.setText("Four-fold degenerate sites");
        jrbFfd.setEnabled(false);
        jrbFfd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbFfdItemStateChanged(evt);
            }
        });

        buttonGroup2.add(jrbIntron);
        jrbIntron.setSelected(true);
        jrbIntron.setText("Introns");
        jrbIntron.setEnabled(false);
        jrbIntron.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbIntronItemStateChanged(evt);
            }
        });

        buttonGroup2.add(jrbOther);
        jrbOther.setText("Other:");
        jrbOther.setEnabled(false);
        jrbOther.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbOtherItemStateChanged(evt);
            }
        });

        jcbReg.setEnabled(false);

        jcbLimit.setText("Limit the number of strains to");
        jcbLimit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLimitItemStateChanged(evt);
            }
        });

        jeLimit.setEnabled(false);
        jeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeLimitKeyTyped(evt);
            }
        });

        jcbRange.setText("Use following positions (e.g. 1-10, 15-25; 31):");
        jcbRange.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbRangeItemStateChanged(evt);
            }
        });

        jeRange.setEnabled(false);

        buttonGroup3.add(jrbAny);
        jrbAny.setSelected(true);
        jrbAny.setText("Any");
        jrbAny.setToolTipText("<html>Use any aligned four-fold degenerate site:<br>CCC (Pro)<br>ACC (Thr)</html>");
        jrbAny.setEnabled(false);

        buttonGroup3.add(jrbSyn);
        jrbSyn.setText("Only synonymous");
        jrbSyn.setToolTipText("<html>Do not use nonsynonymous four-fold degenerate sites");
        jrbSyn.setEnabled(false);

        jcbNonFfd.setText("Ignore strains with non-FFD sites");
        jcbNonFfd.setEnabled(false);

        jcbExclGtag.setSelected(true);
        jcbExclGtag.setText("Exclude GT...AG");
        jcbExclGtag.setEnabled(false);

        buttonGroup2.add(jrbCds);
        jrbCds.setText("Coding sequence");
        jrbCds.setEnabled(false);
        jrbCds.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrbCdsItemStateChanged(evt);
            }
        });

        jcbUseTerm.setText("Use terminal codons when counting sites");
        jcbUseTerm.setEnabled(false);

        jcbExclTerm.setSelected(true);
        jcbExclTerm.setText("Exclude terminal codon");
        jcbExclTerm.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbNonFfd)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jrbAny)
                        .addGap(18, 18, 18)
                        .addComponent(jrbSyn)))
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbExclTerm)
                    .addComponent(jcbUseTerm))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jrbOther)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbReg, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jrbIntron)
                        .addGap(18, 18, 18)
                        .addComponent(jcbExclGtag))
                    .addComponent(jrbFfd)
                    .addComponent(jrbCds))
                .addGap(21, 21, 21))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbMaxLen)
                            .addComponent(jcbMinLen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jeMinLen)
                            .addComponent(jeMaxLen, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jcbLimit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jeRange, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                    .addComponent(jcbRange))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jrbCds))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbUseTerm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbExclTerm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbFfd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbSyn)
                    .addComponent(jrbAny))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbNonFfd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbIntron)
                    .addComponent(jcbExclGtag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbOther)
                    .addComponent(jcbReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMaxLen)
                    .addComponent(jeMaxLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbMinLen)
                    .addComponent(jeMinLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbRange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jeRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbLimit)
                    .addComponent(jeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Missing data"));

        jLabel6.setText("<html>Since the sample size is not constant, the frequency of the bases<br>can be calculated two ways:");

        buttonGroup1.add(jrbSizeConstant);
        jrbSizeConstant.setSelected(true);
        jrbSizeConstant.setText("Sample size is allways the number of strains");

        buttonGroup1.add(jrbSizeVariable);
        jrbSizeVariable.setText("Sample size is the number of valid bases at the site");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbSizeVariable)
                    .addComponent(jrbSizeConstant)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbSizeConstant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbSizeVariable))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        jPanel2.setMaximumSize(new java.awt.Dimension(349, 124));
        jPanel2.setMinimumSize(new java.awt.Dimension(349, 124));

        jLabel4.setText("Output file:");

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jcbShow.setSelected(true);
        jcbShow.setText("Show results in a new window");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jcbShow))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jeFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jeFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jcbShow))
        );

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Length"));

        buttonGroup4.add(jrbLengthRange);
        jrbLengthRange.setSelected(true);
        jrbLengthRange.setText("The minimal and maximal length should fall into the range");

        buttonGroup4.add(jrbLengthUngapped);
        jrbLengthUngapped.setText("Region length is the ungapped alignment length");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbLengthUngapped)
                    .addComponent(jrbLengthRange))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbLengthRange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbLengthUngapped)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, 0, 90, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbMaxLenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMaxLenItemStateChanged
        jeMaxLen.setEnabled(jcbMaxLen.isSelected());
}//GEN-LAST:event_jcbMaxLenItemStateChanged

    private void jcbMinLenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMinLenItemStateChanged
        jeMinLen.setEnabled(jcbMinLen.isSelected());
}//GEN-LAST:event_jcbMinLenItemStateChanged

    private void jeMaxLenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeMaxLenKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c))
            evt.setKeyChar('\0');
}//GEN-LAST:event_jeMaxLenKeyTyped

    private void jeMinLenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeMinLenKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c))
            evt.setKeyChar('\0');
}//GEN-LAST:event_jeMinLenKeyTyped

    private void jrbFfdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbFfdItemStateChanged
        // If the radion button was selected, inactivate irrelevant fields.
        if(jrbFfd.isSelected())
        {
            jcbMinLen.setEnabled(false);
            jcbMinLen.setSelected(false);
            jcbMaxLen.setEnabled(false);
            jcbMaxLen.setSelected(false);
            jcbRange.setEnabled(false);
            jcbRange.setSelected(false);
            jrbLengthRange.setEnabled(false);
            jrbLengthUngapped.setEnabled(false);
        }
        jrbAny.setEnabled(jrbFfd.isSelected());
        jrbSyn.setEnabled(jrbFfd.isSelected());
        jcbNonFfd.setEnabled(jrbFfd.isSelected());
}//GEN-LAST:event_jrbFfdItemStateChanged

    private void jrbIntronItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbIntronItemStateChanged
        if(jrbIntron.isSelected())
        {
            jcbMinLen.setEnabled(true);
            jcbMaxLen.setEnabled(true);
            jcbRange.setEnabled(true);
            jrbLengthRange.setEnabled(true);
            jrbLengthUngapped.setEnabled(true);
        }
        jcbExclGtag.setEnabled(jrbIntron.isSelected());
}//GEN-LAST:event_jrbIntronItemStateChanged

    private void jrbOtherItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbOtherItemStateChanged
        jcbReg.setEnabled(jrbOther.isSelected());
        if(jrbOther.isSelected())
        {
            jcbMinLen.setEnabled(true);
            jcbMaxLen.setEnabled(true);
            jcbRange.setEnabled(true);
            jrbLengthRange.setEnabled(true);
            jrbLengthUngapped.setEnabled(true);
        }
}//GEN-LAST:event_jrbOtherItemStateChanged

    private void jcbLimitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLimitItemStateChanged
        jeLimit.setEnabled(jcbLimit.isSelected());
}//GEN-LAST:event_jcbLimitItemStateChanged

    private void jeLimitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeLimitKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c))
            evt.setKeyChar('\0');
}//GEN-LAST:event_jeLimitKeyTyped

    private void jcbRangeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbRangeItemStateChanged
        jeRange.setEnabled(jcbRange.isSelected());
        if(jcbRange.isSelected())
        {
            jcbExclGtag.setSelected(false);
            jcbExclGtag.setEnabled(false);
        }
        else if(jrbIntron.isSelected())
            jcbExclGtag.setEnabled(true);
}//GEN-LAST:event_jcbRangeItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.addChoosableFileFilter(new FileNameExtensionFilter("Tab-separated text", "txt"));
        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION)
           jeFilename.setText(fc.getSelectedFile().getAbsolutePath());
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ao = new AnalysisOptions();
        // Check whether the output file is set.
        if(!jeFilename.getText().isEmpty())
            ao.strOutput = jeFilename.getText();
        else if(!jcbShow.isSelected())
        {
            JOptionPane.showMessageDialog(null,
                                          "You must either specify an output file or check the box under\n" +
                                          "the file name field to display the result in a new window",
                                          "Bases composition analysis",
                                          JOptionPane.ERROR_MESSAGE);
            return;
        }
        ao.bShowRes = jcbShow.isSelected();
        // Populations.
        ao.strPop = (String)jcPop.getSelectedItem();
        // Type.
        if(jrbFfd.isSelected())
            ao.strRegion = "FFD";
        else if(jrbCds.isSelected())
            ao.strRegion = "CDS";
        else if(jrbIntron.isSelected())
            ao.strRegion = GeneRegion.INTRON;
        else
            ao.strRegion = (String)jcbReg.getSelectedItem();
        // Lengths.
        if(jcbMaxLen.isSelected() && !jeMaxLen.getText().isEmpty())
            ao.iMaxlen = Integer.parseInt(jeMaxLen.getText());
        else
            ao.iMaxlen = Integer.MAX_VALUE;
        if(jcbMinLen.isSelected() && !jeMinLen.getText().isEmpty())
            ao.iMinlen = Integer.parseInt(jeMinLen.getText());
        else
            ao.iMinlen = 0;
        // Correct if the maximal length is less than the minimal.
        if(ao.iMaxlen<ao.iMinlen)
        {
            int tmp = ao.iMaxlen;
            ao.iMaxlen = ao.iMinlen;
            ao.iMinlen = tmp;
        }
        // Max. strains.
        if(jcbLimit.isSelected() && !jeLimit.getText().isEmpty())
            ao.maxstr = Integer.parseInt(jeLimit.getText());
        else
            ao.maxstr = Integer.MAX_VALUE;
        ao.bUseAny = jrbAny.isSelected();
        if(jcbRange.isSelected())
        {
            if(jeRange.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(null,
                                              "Positions to use are not specified",
                                              "Bases composition analysis",
                                              JOptionPane.ERROR_MESSAGE);
                return;
            }
            ao.sites = extractSites(jeRange.getText());
        }
        else
            ao.sites = null;
        ao.bNonFfd = jcbNonFfd.isSelected();
        ao.bNoGtag = jcbExclGtag.isSelected();
        ao.bUseTerm = jcbUseTerm.isSelected();
        ao.bExclTerm = jcbExclTerm.isSelected();
        ao.bLenRange = jrbLengthRange.isSelected();
        if(ao.sites!=null || !ao.strRegion.equalsIgnoreCase(GeneRegion.INTRON))
            ao.bNoGtag = false;
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ao = null;
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jrbCdsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrbCdsItemStateChanged
        if(jrbCds.isSelected())
        {
            jcbMinLen.setEnabled(false);
            jcbMinLen.setSelected(false);
            jcbMaxLen.setEnabled(false);
            jcbMaxLen.setSelected(false);
            jcbRange.setEnabled(false);
            jcbRange.setSelected(false);
            jrbLengthRange.setEnabled(false);
            jrbLengthUngapped.setEnabled(false);
        }
        jcbUseTerm.setEnabled(jrbCds.isSelected());
        jcbExclTerm.setEnabled(jrbCds.isSelected());
    }//GEN-LAST:event_jrbCdsItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox jcPop;
    private javax.swing.JCheckBox jcbExclGtag;
    private javax.swing.JCheckBox jcbExclTerm;
    private javax.swing.JCheckBox jcbLimit;
    private javax.swing.JCheckBox jcbMaxLen;
    private javax.swing.JCheckBox jcbMinLen;
    private javax.swing.JCheckBox jcbNonFfd;
    private javax.swing.JCheckBox jcbRange;
    private javax.swing.JComboBox jcbReg;
    private javax.swing.JCheckBox jcbShow;
    private javax.swing.JCheckBox jcbUseTerm;
    private javax.swing.JTextField jeFilename;
    private javax.swing.JTextField jeLimit;
    private javax.swing.JTextField jeMaxLen;
    private javax.swing.JTextField jeMinLen;
    private javax.swing.JTextField jeRange;
    private javax.swing.JRadioButton jrbAny;
    private javax.swing.JRadioButton jrbCds;
    private javax.swing.JRadioButton jrbFfd;
    private javax.swing.JRadioButton jrbIntron;
    private javax.swing.JRadioButton jrbLengthRange;
    private javax.swing.JRadioButton jrbLengthUngapped;
    private javax.swing.JRadioButton jrbOther;
    private javax.swing.JRadioButton jrbSizeConstant;
    private javax.swing.JRadioButton jrbSizeVariable;
    private javax.swing.JRadioButton jrbSyn;
    // End of variables declaration//GEN-END:variables

}
