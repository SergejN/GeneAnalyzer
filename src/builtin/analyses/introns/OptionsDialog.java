/*
    File:
        OptionsDialog.java
 *   
    Revision:
        1.1.0.1
 * 
    Description:
        Allows the user to select options for performing the analysis.
 * 
    Project:
        GeneAnalyzer 2.2
 * 
    Copyright:
        (c) 2008. Sergej Nowoshilow, Biozentrum, Martinsried, Germany.
 */

package builtin.analyses.introns;

import java.util.Arrays;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


public class OptionsDialog extends javax.swing.JDialog 
{
    private AnalysisOptions ao = null;
    
    /**
     *  Displays the dialog.
     * 
     *  @param ao
     */
    public AnalysisOptions getOptions()
    {
        setVisible(true);
        return ao;
    }    
    
    /**
     *  Creates the dialog.
     */
    public OptionsDialog(String[] pops) 
    {      
        super((java.awt.Frame)null, true);
        initComponents();
        setLocationRelativeTo(null);
        for(String s:pops)
        {
            jcPop.addItem(s);
            jcOut.addItem(s);
        }        
    }
    
    /**
     *  Extracts the positions to use from the parameter string.
     * 
     *  @param strPositions
     *  @return
     */
    public static int[] extractSites(String strSites)
    {
        Vector<Integer> tmp = new Vector<Integer>();
        // Search for pairs.
        Pattern pair = Pattern.compile("(\\d+)-(\\d+)");
        Matcher m = pair.matcher(strSites);
        while(m.find())
        {
            // Make sure, the sites are always positive and the first site
            // is 0.
            int start = Math.max(Integer.parseInt(m.group(1))-1,0);
            int end = Math.max(Integer.parseInt(m.group(2))-1,0);
            // Add range.
            for(int i=Math.min(start, end);i<=Math.max(start,end);i++)
                tmp.add(new Integer(i));
        }
        // Search for single numbers.
        Pattern num = Pattern.compile("[,;\\s]+(\\d+)[,;\\s]*");
        m = num.matcher(strSites);
        while(m.find())
            tmp.add(Math.max(Integer.parseInt(m.group(1))-1,0));
        // Sort positions.
        if(tmp.size()==0)
            return null;
        int[] sites = new int[tmp.size()];
        for(int i=0;i<tmp.size();i++)
            sites[i] = tmp.get(i);
        Arrays.sort(sites);
        return sites;
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jcPop = new javax.swing.JComboBox();
        jcOut = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jeFilename = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jcbShow = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jcbRecSeq = new javax.swing.JCheckBox();
        jcbCombine = new javax.swing.JCheckBox();
        jcbPositions = new javax.swing.JCheckBox();
        jePositions = new javax.swing.JTextField();
        jcbLimit = new javax.swing.JCheckBox();
        jeLimit = new javax.swing.JTextField();
        jcbFreq = new javax.swing.JCheckBox();
        jeFreq = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jcbMaxLen = new javax.swing.JCheckBox();
        jcbMinLen = new javax.swing.JCheckBox();
        jeMaxLen = new javax.swing.JTextField();
        jeMinLen = new javax.swing.JTextField();
        jrbLengthRange = new javax.swing.JRadioButton();
        jrbLengthUngapped = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jcbJC_pi = new javax.swing.JCheckBox();
        jcbJC_theta = new javax.swing.JCheckBox();
        jcbJC_K = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jrbExcludeAll = new javax.swing.JRadioButton();
        jrbExcludeTajD = new javax.swing.JRadioButton();

        setTitle("Introns analysis options");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Populations"));

        jLabel2.setText("Population of interest:");
        jLabel2.setFocusable(false);

        jLabel3.setText("Outgroup:");
        jLabel3.setFocusable(false);

        jLabel1.setText("<html>For short introns analysis you need to specify the population of interest and<br>the outgroup as well as whether or not to correct the results using<br>Jukes-Cantor correction formula.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcOut, 0, 244, Short.MAX_VALUE)
                            .addComponent(jcPop, 0, 244, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));

        jLabel4.setText("Output file:");

        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jcbShow.setSelected(true);
        jcbShow.setText("Show results in a new window");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jcbShow))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jeFilename, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jeFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcbShow))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Analysis options"));

        jcbRecSeq.setText("<html>Exclude the first two (GT) and the last two (AG) bases<br><i>Check this option to exclude intron recognition sequence</i>");

        jcbCombine.setText("<html>Combine introns<br><i>Check this option to combine the results of multiple introns</i>");

        jcbPositions.setText("<html>Use certain intron positions only (Sites with gaps are not counted)<br><i>Specify the positions to use for the analysis. Use the notation:<br>-<b>X-Y</b> for the range from X to Y</i><br><i>-<b>X, Y</b> for the positions X and Y only</i><br><i>You can also combine both, e.g. 1-10, 15, 18-20</i>");
        jcbPositions.setToolTipText("");
        jcbPositions.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPositionsItemStateChanged(evt);
            }
        });

        jePositions.setEnabled(false);
        jePositions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jePositionsKeyTyped(evt);
            }
        });

        jcbLimit.setText("Limit the number of strains to");
        jcbLimit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLimitItemStateChanged(evt);
            }
        });

        jeLimit.setEnabled(false);
        jeLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeLimitKeyTyped(evt);
            }
        });

        jcbFreq.setText("Use custom singletons cut-off frequency:");
        jcbFreq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFreqItemStateChanged(evt);
            }
        });

        jeFreq.setEnabled(false);
        jeFreq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeFreqKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbRecSeq)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jcbFreq)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jeFreq, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jcbLimit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(86, Short.MAX_VALUE)
                        .addComponent(jePositions, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jcbPositions)
                    .addComponent(jcbCombine))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jcbRecSeq)
                .addGap(8, 8, 8)
                .addComponent(jcbCombine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbPositions)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jePositions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbLimit)
                    .addComponent(jeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbFreq)
                    .addComponent(jeFreq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Intron length"));

        jcbMaxLen.setText("Maximal length:");
        jcbMaxLen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMaxLenItemStateChanged(evt);
            }
        });

        jcbMinLen.setText("Minimal length:");
        jcbMinLen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMinLenItemStateChanged(evt);
            }
        });

        jeMaxLen.setEnabled(false);
        jeMaxLen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeMaxLenKeyTyped(evt);
            }
        });

        jeMinLen.setEnabled(false);
        jeMinLen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jeMinLenKeyTyped(evt);
            }
        });

        buttonGroup2.add(jrbLengthRange);
        jrbLengthRange.setSelected(true);
        jrbLengthRange.setText("The minimal and maximal length should fall into the range");
        jrbLengthRange.setEnabled(false);

        buttonGroup2.add(jrbLengthUngapped);
        jrbLengthUngapped.setText("Region length is the ungapped alignment length");
        jrbLengthUngapped.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jrbLengthUngapped)
                        .addComponent(jrbLengthRange))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jcbMaxLen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jeMaxLen, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jcbMinLen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jeMinLen, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMaxLen)
                    .addComponent(jeMaxLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMinLen)
                    .addComponent(jeMinLen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                .addComponent(jrbLengthRange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbLengthUngapped)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Jukes-Cantor correction"));

        jcbJC_pi.setSelected(true);
        jcbJC_pi.setText("Pi");

        jcbJC_theta.setText("Theta");

        jcbJC_K.setSelected(true);
        jcbJC_K.setText("K");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbJC_pi)
                .addGap(18, 18, 18)
                .addComponent(jcbJC_theta)
                .addGap(18, 18, 18)
                .addComponent(jcbJC_K)
                .addContainerGap(216, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jcbJC_pi)
                .addComponent(jcbJC_theta)
                .addComponent(jcbJC_K))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Missing data"));

        jLabel6.setText("<html>Tajima's D cannot be calculated for the sample size less than 4. How<br>should the blocks with the sample size of <4 be treated?");

        buttonGroup1.add(jrbExcludeAll);
        jrbExcludeAll.setText("Exclude from the analysis completely");

        buttonGroup1.add(jrbExcludeTajD);
        jrbExcludeTajD.setSelected(true);
        jrbExcludeTajD.setText("Exclude only when calculating Tajima's D");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbExcludeTajD)
                            .addComponent(jrbExcludeAll))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbExcludeAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbExcludeTajD)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    ao = null;
    setVisible(false);
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    ao = new AnalysisOptions();
    // Cut-off frequency.
    if(jcbFreq.isSelected())
    {
        if(jeFreq.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, 
                                      "No cut-off frequency specified", 
                                      "Short introns analysis", 
                                      JOptionPane.ERROR_MESSAGE);
            return;
        }
        else
            ao.cof = Float.parseFloat(jeFreq.getText());
    }
    else
        ao.cof = 1.0f;
    ao.strPop = (String)jcPop.getSelectedItem();
    ao.strOut = (String)jcOut.getSelectedItem();
    ao.bJC_Pi = jcbJC_pi.isSelected();
    ao.bJC_Theta = jcbJC_theta.isSelected();
    ao.bJC_K = jcbJC_K.isSelected();
    // Output file.
    if(!jeFilename.getText().isEmpty())
        ao.strOutput = jeFilename.getText();
    else if(!jcbShow.isSelected())
    {
        JOptionPane.showMessageDialog(null, 
                                      "You must either specify an output file or check the box under\n" +
                                      "the file name field to display the result in a new window",
                                      "Short introns analysis", 
                                      JOptionPane.ERROR_MESSAGE);
        return;
    }
    ao.bShowRes = jcbShow.isSelected();
    // Positions.
    if(jcbPositions.isSelected())
    {
        if(jePositions.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, 
                                          "Positions to use are not specified", 
                                          "Short introns analysis", 
                                          JOptionPane.ERROR_MESSAGE);
            return;
        }
        ao.sites = extractSites(jePositions.getText());
    }
    else
        ao.sites = null;
    // Exclusion sites.
    ao.bNogtag = jcbRecSeq.isSelected();
    ao.bCombine = jcbCombine.isSelected();
    // Length.
    if(jcbMaxLen.isSelected() && !jeMaxLen.getText().isEmpty())
        ao.maxlen = Integer.parseInt(jeMaxLen.getText());
    else
        ao.maxlen = Integer.MAX_VALUE;
    if(jcbMinLen.isSelected() && !jeMinLen.getText().isEmpty())
        ao.minlen = Integer.parseInt(jeMinLen.getText());
    else
        ao.minlen = 0;
    // Correct if the maximal length is less than the minimal.
    if(ao.maxlen<ao.minlen)
    {
        int tmp = ao.maxlen;
        ao.maxlen = ao.minlen;
        ao.minlen = tmp;
    }
    // Max. strains.
    if(jcbLimit.isSelected() && !jeLimit.getText().isEmpty())
        ao.maxstr = Integer.parseInt(jeLimit.getText());
    else
        ao.maxstr = Integer.MAX_VALUE;
    ao.bExclAll = jrbExcludeAll.isSelected();
    ao.bLenRange = jrbLengthRange.isSelected();
    setVisible(false);
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    JFileChooser fc = new JFileChooser();
    fc.addChoosableFileFilter(
                    new FileNameExtensionFilter("Tab-separated text", "txt"));
    if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION)
    {
        try
        {
            jeFilename.setText(fc.getSelectedFile().getCanonicalPath());
        }
        catch (Exception e)
        {
            jeFilename.setText("");
        }
    }
}//GEN-LAST:event_jButton3ActionPerformed

private void jcbPositionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPositionsItemStateChanged
    if(jcbPositions.isSelected())
    {
        jePositions.setEnabled(true);
        jcbRecSeq.setSelected(false);
        jcbRecSeq.setEnabled(false);
    }
    else
    {
        jePositions.setEnabled(false);
        jcbRecSeq.setEnabled(true);
    }
}//GEN-LAST:event_jcbPositionsItemStateChanged

private void jeMaxLenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeMaxLenKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeMaxLenKeyTyped

private void jeMinLenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeMinLenKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeMinLenKeyTyped

private void jcbMaxLenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMaxLenItemStateChanged
    jeMaxLen.setEnabled(jcbMaxLen.isSelected());
    // If both check boxes are not selected, disable the radio buttons.
    if(!jcbMaxLen.isSelected() && !jcbMinLen.isSelected())
    {
        jrbLengthRange.setEnabled(false);
        jrbLengthUngapped.setEnabled(false);
    }
    else
    {
        jrbLengthRange.setEnabled(true);
        jrbLengthUngapped.setEnabled(true);
    }
}//GEN-LAST:event_jcbMaxLenItemStateChanged

private void jcbMinLenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMinLenItemStateChanged
    jeMinLen.setEnabled(jcbMinLen.isSelected());
    // If both check boxes are not selected, disable the radio buttons.
    if(!jcbMaxLen.isSelected() && !jcbMinLen.isSelected())
    {
        jrbLengthRange.setEnabled(false);
        jrbLengthUngapped.setEnabled(false);
    }
    else
    {
        jrbLengthRange.setEnabled(true);
        jrbLengthUngapped.setEnabled(true);
    }
}//GEN-LAST:event_jcbMinLenItemStateChanged

private void jcbLimitItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLimitItemStateChanged
    jeLimit.setEnabled(jcbLimit.isSelected());
}//GEN-LAST:event_jcbLimitItemStateChanged

private void jeLimitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeLimitKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeLimitKeyTyped

private void jeFreqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jeFreqKeyTyped
    char c = evt.getKeyChar();
    // If the key is '.' check, whether the text
    // already contains this character.
    if(c=='.')
    {
        if(jeFreq.getText().contains("."))
            evt.setKeyChar('\0');
        return;
    }
    if(!Character.isDigit(c))
        evt.setKeyChar('\0');
}//GEN-LAST:event_jeFreqKeyTyped

private void jcbFreqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFreqItemStateChanged
    jeFreq.setEnabled(jcbFreq.isSelected());
}//GEN-LAST:event_jcbFreqItemStateChanged

private void jePositionsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jePositionsKeyTyped
    char c = evt.getKeyChar();
    if(!Character.isDigit(c) && c!=' ' && c!=';' && c!='-' && c!=',')
        evt.setKeyChar('\0');
}//GEN-LAST:event_jePositionsKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JComboBox jcOut;
    private javax.swing.JComboBox jcPop;
    private javax.swing.JCheckBox jcbCombine;
    private javax.swing.JCheckBox jcbFreq;
    private javax.swing.JCheckBox jcbJC_K;
    private javax.swing.JCheckBox jcbJC_pi;
    private javax.swing.JCheckBox jcbJC_theta;
    private javax.swing.JCheckBox jcbLimit;
    private javax.swing.JCheckBox jcbMaxLen;
    private javax.swing.JCheckBox jcbMinLen;
    private javax.swing.JCheckBox jcbPositions;
    private javax.swing.JCheckBox jcbRecSeq;
    private javax.swing.JCheckBox jcbShow;
    private javax.swing.JTextField jeFilename;
    private javax.swing.JTextField jeFreq;
    private javax.swing.JTextField jeLimit;
    private javax.swing.JTextField jeMaxLen;
    private javax.swing.JTextField jeMinLen;
    private javax.swing.JTextField jePositions;
    private javax.swing.JRadioButton jrbExcludeAll;
    private javax.swing.JRadioButton jrbExcludeTajD;
    private javax.swing.JRadioButton jrbLengthRange;
    private javax.swing.JRadioButton jrbLengthUngapped;
    // End of variables declaration//GEN-END:variables

}
