/*
    File:
        GeneAnnotationView.java
 *
    Revision:
        1.0.0.1
 *
    Description:
        GeneAnnotationView is displayed at the right hand side of the host-application
        window. It displays the relative position of the gene regions of the selected
        strain.
 *
    Project:
        GeneAnalyzer 2.2
 *
    Copyright:
        (c) 2008. Sergej Nowoshilow, Biozentrum, Martinsried, Germany.
 */

package gui.views;

import plugin.classes.AGeneAnalyzerView;
import gui.views.AnnotationRenderer;
import algorithms.SequenceRoutines;
import bio.gene.GeneEntry;
import bio.gene.GeneRegion;
import bio.gene.StrainEntry;
import java.awt.GridLayout;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import javax.swing.table.DefaultTableModel;


public class GeneAnnotationView extends AGeneAnalyzerView
{
    private class GraphicsListener implements ComponentListener
    {
        public void componentResized(ComponentEvent e)
        {
            ar.paintRegions(se);
        }

        public void componentMoved(ComponentEvent e) {}
        public void componentShown(ComponentEvent e) {}
        public void componentHidden(ComponentEvent e) {}
    };

    private GeneEntry ge = null;
    private AnnotationRenderer ar = null;
    private StrainEntry se = null;

    public GeneAnnotationView()
    {
        initComponents();
        ar = new AnnotationRenderer();
        ar.setBounds(0, 0, 120, 120);
        ar.setVisible(true);
        jpGraphics.setLayout(new GridLayout(1, 1));
        jpGraphics.add(ar);
        jpGraphics.addComponentListener(new GraphicsListener());
        reset();
    }

    public String getButtonName()
    {
        return "Annotation";
    }
    
    public String getButtonHintText()
    {
        return "Displays the annotation details and the structure of the gene entry";
    }
    
    public void displayGeneEntryInfo(GeneEntry ge)
    {
        this.ge = ge;
        if(ge==null)
        {
            reset();
            return;
        }        
        // Strain names.
        jcbStrains.removeAllItems();
        for(int i=0;i<ge.getStrainsCount();i++)
            jcbStrains.addItem(ge.getStrainEntry(i).getStrainName());
        jcbStrains.setSelectedIndex(0);
        jtaSequence.setText("");
    }

    /**
     *  Resets the view to the initial state.
     */
    private void reset()
    {
        ge = null;
        se = null;
        DefaultTableModel model = (DefaultTableModel)lvRegions.getModel();
        for(int i=model.getRowCount()-1;i>=0;i--)
            model.removeRow(i);
        jcbStrains.removeAllItems();
        jtaSequence.setText("");
        ar.reset();
    }

    private void displayStrainAnnotationInfo(int iIndex)
    {
        if(ge==null)
            return;
        se = ge.getStrainEntry(iIndex);
        DefaultTableModel model = (DefaultTableModel)lvRegions.getModel();
        for(int i=model.getRowCount()-1;i>=0;i--)
            model.removeRow(i);
        for(int i=0;i<se.getRegionsCount();i++)
        {
            GeneRegion reg = se.getRegion(i);
            model.addRow(new Object[]{reg.getType(), reg.getStart(), reg.getEnd()});
        }
        ar.paintRegions(se);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lvRegions = new javax.swing.JTable();
        jcbStrains = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jpGraphics = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaSequence = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Annotation details"));

        lvRegions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Region", "Start", "End"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lvRegions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lvRegionsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lvRegions);

        jcbStrains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbStrainsActionPerformed(evt);
            }
        });

        jLabel1.setText("Strain:");

        jpGraphics.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jpGraphicsLayout = new javax.swing.GroupLayout(jpGraphics);
        jpGraphics.setLayout(jpGraphicsLayout);
        jpGraphicsLayout.setHorizontalGroup(
            jpGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 257, Short.MAX_VALUE)
        );
        jpGraphicsLayout.setVerticalGroup(
            jpGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );

        jtaSequence.setColumns(20);
        jtaSequence.setRows(5);
        jScrollPane2.setViewportView(jtaSequence);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jcbStrains, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
            .addComponent(jpGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbStrains, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcbStrainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbStrainsActionPerformed
        int i = jcbStrains.getSelectedIndex();
        if(i>-1)
            displayStrainAnnotationInfo(i);
    }//GEN-LAST:event_jcbStrainsActionPerformed

    private void lvRegionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lvRegionsMouseClicked
        if(evt.getClickCount()==2)
        {
            int i = lvRegions.getSelectedRow();
            if(i>-1)
                jtaSequence.setText(SequenceRoutines.getFormattedSequence(se.getRegion(i).getSequence(), 100));
        }
    }//GEN-LAST:event_lvRegionsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox jcbStrains;
    private javax.swing.JPanel jpGraphics;
    private javax.swing.JTextArea jtaSequence;
    private javax.swing.JTable lvRegions;
    // End of variables declaration//GEN-END:variables

}
